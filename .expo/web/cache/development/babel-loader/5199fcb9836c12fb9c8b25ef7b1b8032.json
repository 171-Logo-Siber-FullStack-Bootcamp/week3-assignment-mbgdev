{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from \"axios\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Apim(_ref) {\n  var navigation = _ref.navigation;\n\n  var posts = function posts() {\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        posts = _useState2[0],\n        setPost = _useState2[1];\n\n    useEffect(function () {\n      fetchData();\n    }, []);\n\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/posts'));\n\n            case 2:\n              response = _context.sent;\n              setPost(response.data.title);\n              console.log(\"city: \" + response.data.title);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var renderPosts = function renderPosts(_ref2) {\n      var item = _ref2.item;\n      return _jsx(View, {\n        style: {\n          width: Dimensions.get(\"window\").width / 2.5,\n          padding: 5,\n          alignItems: 'center'\n        },\n        children: _jsxs(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 15\n          },\n          children: [\" \", item]\n        })\n      });\n    };\n\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        backgroundColor: \"#161b22\",\n        flexDirection: \"column\"\n      },\n      children: _jsx(FlatList, {\n        columnWrapperStyle: {\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        numColumns: 2,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        data: posts,\n        renderItem: renderPosts\n      })\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Burak/Desktop/odev/my-app/screens/apim.js"],"names":["React","axios","Apim","navigation","posts","useState","setPost","useEffect","fetchData","get","response","data","title","console","log","renderPosts","item","width","Dimensions","padding","alignItems","fontWeight","fontSize","flex","justifyContent","backgroundColor","flexDirection","alignContent","index","toString"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,OAAO,SAASC,IAAT,OAA8B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAGrC,MAAMC,KAAK,GAAC,iBAAI;AACZ,oBAAqBC,QAAQ,CAAC,EAAD,CAA7B;AAAA;AAAA,QAAMD,KAAN;AAAA,QAAYE,OAAZ;;AAGAC,IAAAA,SAAS,CAAC,YAAM;AACZC,MAAAA,SAAS;AACZ,KAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOP,KAAK,CAACQ,GAAN,CAAU,4CAAV,CADP;;AAAA;AACVC,cAAAA,QADU;AAEdJ,cAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAP;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,QAAQ,CAACC,IAAT,CAAcC,KAArC;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AASA,QAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACpB,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEC,UAAU,CAACT,GAAX,CAAe,QAAf,EAAyBQ,KAAzB,GAAiC,GAA1C;AAA+CE,UAAAA,OAAO,EAAE,CAAxD;AAA2DC,UAAAA,UAAU,EAAE;AAAvE,SAAb;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,QAAQ,EAAE;AAAhC,WAAb;AAAA,0BAAqDN,IAArD;AAAA;AADJ,QADoB;AAAA,KAApB;;AAMF,WAEE,KAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLO,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,eAAe,EAAE,SAHZ;AAILC,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA,gBAQK,KAAC,QAAD;AACW,QAAA,kBAAkB,EAAE;AAAEF,UAAAA,cAAc,EAAE,QAAlB;AAA4BG,UAAAA,YAAY,EAAE,QAA1C;AAAoDP,UAAAA,UAAU,EAAE;AAAhE,SAD/B;AAEW,QAAA,UAAU,EAAE,CAFvB;AAGW,QAAA,YAAY,EAAE,sBAACJ,IAAD,EAAOY,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAHzB;AAIW,QAAA,IAAI,EAAEzB,KAJjB;AAKW,QAAA,UAAU,EAAEW;AALvB;AARL,MAFF;AAoBD,GA3CD;AA4CC","sourcesContent":["import * as React from \"react\";\r\nimport { Button, View, Text, FlatList } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport function Apim({ navigation }) {\r\n\r\n\r\nconst posts=()=>{\r\n    const[posts,setPost]=useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        let response = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n        setPost(response.data.title)\r\n        console.log(\"city: \" + response.data.title)\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderPosts = ({ item }) =>\r\n    <View style={{ width: Dimensions.get(\"window\").width / 2.5, padding: 5, alignItems: 'center' }}>\r\n        <Text style={{ fontWeight: 'bold', fontSize: 15 }}> {item}</Text>\r\n    </View>\r\n\r\n\r\n  return (\r\n      \r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#161b22\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n         <FlatList\r\n                    columnWrapperStyle={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}\r\n                    numColumns={2}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    data={posts}\r\n                    renderItem={renderPosts}\r\n                />\r\n    </View>\r\n  );\r\n\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}