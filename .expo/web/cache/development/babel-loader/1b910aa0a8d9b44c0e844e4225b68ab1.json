{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function CityListt() {\n  var CityList = function CityList() {\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cityList = _useState2[0],\n        setCityList = _useState2[1];\n\n    useEffect(function () {\n      fetchData();\n    }, []);\n\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"https://opentable.herokuapp.com/api/cities\"));\n\n            case 2:\n              response = _context.sent;\n              setCityList(response.data.cities);\n              console.log(\"city: \" + response.data.cities);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var renderCities = function renderCities(_ref) {\n      var item = _ref.item;\n      return _jsx(View, {\n        style: {\n          width: Dimensions.get(\"window\").width / 2.5,\n          padding: 5,\n          alignItems: 'center'\n        },\n        children: _jsxs(Text, {\n          style: {\n            fontWeight: 'bold',\n            fontSize: 15\n          },\n          children: [\" \", item]\n        })\n      });\n    };\n\n    return _jsx(SafeAreaView, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(FlatList, {\n          columnWrapperStyle: {\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center'\n          },\n          numColumns: 2,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          data: cityList,\n          renderItem: renderCities\n        })\n      })\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Burak/Desktop/odev/my-app/screens/apim.js"],"names":["axios","React","useState","useEffect","CityListt","CityList","cityList","setCityList","fetchData","get","response","data","cities","console","log","renderCities","item","width","Dimensions","padding","alignItems","fontWeight","fontSize","flex","justifyContent","alignContent","index","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;AAIA,OAAO,SAASC,SAAT,GAAoB;AAI1B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACpB,oBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,QAAOI,QAAP;AAAA,QAAiBC,WAAjB;;AAEAJ,IAAAA,SAAS,CAAC,YAAM;AACZK,MAAAA,SAAS;AACZ,KAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOR,KAAK,CAACS,GAAN,CAAU,4CAAV,CADP;;AAAA;AACVC,cAAAA,QADU;AAEdH,cAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAX;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,QAAQ,CAACC,IAAT,CAAcC,MAArC;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAOA,QAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aACjB,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEC,UAAU,CAACT,GAAX,CAAe,QAAf,EAAyBQ,KAAzB,GAAiC,GAA1C;AAA+CE,UAAAA,OAAO,EAAE,CAAxD;AAA2DC,UAAAA,UAAU,EAAE;AAAvE,SAAb;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,QAAQ,EAAE;AAAhC,WAAb;AAAA,0BAAqDN,IAArD;AAAA;AADJ,QADiB;AAAA,KAArB;;AAOA,WACI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAArB;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA,kBACI,KAAC,QAAD;AACI,UAAA,kBAAkB,EAAE;AAAEC,YAAAA,cAAc,EAAE,QAAlB;AAA4BC,YAAAA,YAAY,EAAE,QAA1C;AAAoDL,YAAAA,UAAU,EAAE;AAAhE,WADxB;AAEI,UAAA,UAAU,EAAE,CAFhB;AAGI,UAAA,YAAY,EAAE,sBAACJ,IAAD,EAAOU,KAAP;AAAA,mBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,WAHlB;AAII,UAAA,IAAI,EAAErB,QAJV;AAKI,UAAA,UAAU,EAAES;AALhB;AADJ;AADJ,MADJ;AAcH,GAnCA;AAqCA","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { SafeAreaView, View, Text, Button, FlatList, TouchableOpacity, Dimensions } from 'react-native'\r\n\r\n\r\nexport function CityListt(){\r\n\r\n\r\n\r\n const CityList = () => {\r\n    const [cityList, setCityList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async () => {\r\n        let response = await axios.get(\"https://opentable.herokuapp.com/api/cities\")\r\n        setCityList(response.data.cities)\r\n        console.log(\"city: \" + response.data.cities)\r\n    }\r\n\r\n\r\n    const renderCities = ({ item }) =>\r\n        <View style={{ width: Dimensions.get(\"window\").width / 2.5, padding: 5, alignItems: 'center' }}>\r\n            <Text style={{ fontWeight: 'bold', fontSize: 15 }}> {item}</Text>\r\n        </View>\r\n\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={{ flex: 1 }}>\r\n                <FlatList\r\n                    columnWrapperStyle={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}\r\n                    numColumns={2}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    data={cityList}\r\n                    renderItem={renderCities}\r\n                />\r\n\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}