{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Apim = function Apim() {\n  var getDataUsingSimpleGetCall = function getDataUsingSimpleGetCall() {\n    axios.get('https://jsonplaceholder.typicode.com/posts/1').then(function (response) {\n      alert(JSON.stringify(response.data));\n    }).catch(function (error) {\n      alert(error.message);\n    }).finally(function () {\n      alert('Finally called');\n    });\n  };\n\n  var getDataUsingAsyncAwaitGetCall = function getDataUsingAsyncAwaitGetCall() {\n    var response;\n    return _regeneratorRuntime.async(function getDataUsingAsyncAwaitGetCall$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/posts/1'));\n\n          case 3:\n            response = _context.sent;\n            alert(JSON.stringify(response.data));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var postDataUsingSimplePostCall = function postDataUsingSimplePostCall() {\n    axios.post('https://jsonplaceholder.typicode.com/posts', {\n      title: 'foo',\n      body: 'bar',\n      userId: 1\n    }).then(function (response) {\n      alert(JSON.stringify(response.data));\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var multipleRequestsInSingleCall = function multipleRequestsInSingleCall() {\n    axios.all([axios.get('https://jsonplaceholder.typicode.com/posts/1').then(function (response) {\n      alert('Post 1 : ' + JSON.stringify(response.data));\n    }), axios.get('https://jsonplaceholder.typicode.com/posts/2').then(function (response) {\n      alert('Post 2 : ' + JSON.stringify(response.data));\n    })]).then(axios.spread(function (acct, perms) {\n      alert('Both requests are now complete');\n    }));\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 30,\n        textAlign: 'center'\n      },\n      children: \"Example of Axios Networking in React Native\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getDataUsingSimpleGetCall,\n      children: _jsx(Text, {\n        children: \"Simple Get Call\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: getDataUsingAsyncAwaitGetCall,\n      children: _jsx(Text, {\n        children: \"Get Data Using Async Await GET\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: postDataUsingSimplePostCall,\n      children: _jsx(Text, {\n        children: \"Post Data Using POST\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyle,\n      onPress: multipleRequestsInSingleCall,\n      children: _jsx(Text, {\n        children: \"Multiple Concurrent Requests In Single Call\"\n      })\n    }), _jsx(Text, {\n      style: {\n        textAlign: 'center',\n        marginTop: 18\n      },\n      children: \"www.aboutreact.com\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flex: 1,\n    padding: 16\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    width: '100%',\n    marginTop: 16\n  }\n});\nexport default Apim;","map":{"version":3,"sources":["C:/Users/Burak/Desktop/odev/my-app/screens/apim.js"],"names":["React","axios","Apim","getDataUsingSimpleGetCall","get","then","response","alert","JSON","stringify","data","catch","error","message","finally","getDataUsingAsyncAwaitGetCall","postDataUsingSimplePostCall","post","title","body","userId","multipleRequestsInSingleCall","all","spread","acct","perms","styles","container","fontSize","textAlign","buttonStyle","marginTop","StyleSheet","create","justifyContent","flex","padding","alignItems","backgroundColor","width"],"mappings":";AAGA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACtCF,IAAAA,KAAK,CACFG,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AAExBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAD,CAAL;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AAEtBL,MAAAA,KAAK,CAACK,KAAK,CAACC,OAAP,CAAL;AACD,KATH,EAUGC,OAVH,CAUW,YAAY;AAEnBP,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KAbH;AAcD,GAfD;;AAiBA,MAAMQ,6BAA6B,GAAG,SAAhCA,6BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEXd,KAAK,CAACG,GAAN,CACrB,8CADqB,CAFW;;AAAA;AAE5BE,YAAAA,QAF4B;AAKlCC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAD,CAAL;AALkC;AAAA;;AAAA;AAAA;AAAA;AAQlCH,YAAAA,KAAK,CAAC,YAAMM,OAAP,CAAL;;AARkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAYA,MAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AACxCf,IAAAA,KAAK,CACFgB,IADH,CACQ,4CADR,EACsD;AAClDC,MAAAA,KAAK,EAAE,KAD2C;AAElDC,MAAAA,IAAI,EAAE,KAF4C;AAGlDC,MAAAA,MAAM,EAAE;AAH0C,KADtD,EAMGf,IANH,CAMQ,UAAUC,QAAV,EAAoB;AAExBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAD,CAAL;AACD,KATH,EAUGC,KAVH,CAUS,UAAUC,KAAV,EAAiB;AAEtBL,MAAAA,KAAK,CAACK,KAAK,CAACC,OAAP,CAAL;AACD,KAbH;AAcD,GAfD;;AAiBA,MAAMQ,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzCpB,IAAAA,KAAK,CACFqB,GADH,CACO,CACHrB,KAAK,CACFG,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AAExBC,MAAAA,KAAK,CAAC,cAAcC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAf,CAAL;AACD,KALH,CADG,EAOHT,KAAK,CACFG,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AAExBC,MAAAA,KAAK,CAAC,cAAcC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,CAAf,CAAL;AACD,KALH,CAPG,CADP,EAeGL,IAfH,CAgBIJ,KAAK,CAACsB,MAAN,CAAa,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAElClB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,KAHD,CAhBJ;AAqBD,GAtBD;;AAwBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeC,QAAAA,SAAS,EAAE;AAA1B,OAAb;AAAA;AAAA,MADF,EAKE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAEH,MAAM,CAACI,WADhB;AAEE,MAAA,OAAO,EAAE3B,yBAFX;AAAA,gBAGE,KAAC,IAAD;AAAA;AAAA;AAHF,MALF,EAWE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAEuB,MAAM,CAACI,WADhB;AAEE,MAAA,OAAO,EAAEf,6BAFX;AAAA,gBAGE,KAAC,IAAD;AAAA;AAAA;AAHF,MAXF,EAiBE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAEW,MAAM,CAACI,WADhB;AAEE,MAAA,OAAO,EAAEd,2BAFX;AAAA,gBAGE,KAAC,IAAD;AAAA;AAAA;AAHF,MAjBF,EAuBE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAEU,MAAM,CAACI,WADhB;AAEE,MAAA,OAAO,EAAET,4BAFX;AAAA,gBAGE,KAAC,IAAD;AAAA;AAAA;AAHF,MAvBF,EA6BE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACQ,QAAAA,SAAS,EAAE,QAAZ;AAAsBE,QAAAA,SAAS,EAAE;AAAjC,OAAb;AAAA;AAAA,MA7BF;AAAA,IADF;AAmCD,CA1GD;;AA4GA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,OAAO,EAAE;AAHA,GADoB;AAM/BN,EAAAA,WAAW,EAAE;AACXO,IAAAA,UAAU,EAAE,QADD;AAEXC,IAAAA,eAAe,EAAE,SAFN;AAGXF,IAAAA,OAAO,EAAE,EAHE;AAIXG,IAAAA,KAAK,EAAE,MAJI;AAKXR,IAAAA,SAAS,EAAE;AALA;AANkB,CAAlB,CAAf;AAeA,eAAe7B,IAAf","sourcesContent":["// React Native Axios â€“ To Make HTTP API call in React Native\r\n// https://aboutreact.com/react-native-axios/\r\n\r\nimport React from 'react';\r\n//import React in our code.\r\nimport {StyleSheet, View, TouchableOpacity, Text} from 'react-native';\r\n//import all the components we are going to use.\r\nimport axios from 'axios';\r\n\r\nconst Apim = () => {\r\n  const getDataUsingSimpleGetCall = () => {\r\n    axios\r\n      .get('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(function (response) {\r\n        // handle success\r\n        alert(JSON.stringify(response.data));\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        alert(error.message);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n        alert('Finally called');\r\n      });\r\n  };\r\n\r\n  const getDataUsingAsyncAwaitGetCall = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://jsonplaceholder.typicode.com/posts/1',\r\n      );\r\n      alert(JSON.stringify(response.data));\r\n    } catch (error) {\r\n      // handle error\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const postDataUsingSimplePostCall = () => {\r\n    axios\r\n      .post('https://jsonplaceholder.typicode.com/posts', {\r\n        title: 'foo',\r\n        body: 'bar',\r\n        userId: 1,\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        alert(JSON.stringify(response.data));\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const multipleRequestsInSingleCall = () => {\r\n    axios\r\n      .all([\r\n        axios\r\n          .get('https://jsonplaceholder.typicode.com/posts/1')\r\n          .then(function (response) {\r\n            // handle success\r\n            alert('Post 1 : ' + JSON.stringify(response.data));\r\n          }),\r\n        axios\r\n          .get('https://jsonplaceholder.typicode.com/posts/2')\r\n          .then(function (response) {\r\n            // handle success\r\n            alert('Post 2 : ' + JSON.stringify(response.data));\r\n          }),\r\n      ])\r\n      .then(\r\n        axios.spread(function (acct, perms) {\r\n          // Both requests are now complete\r\n          alert('Both requests are now complete');\r\n        }),\r\n      );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{fontSize: 30, textAlign: 'center'}}>\r\n        Example of Axios Networking in React Native\r\n      </Text>\r\n      {/*Running GET Request*/}\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getDataUsingSimpleGetCall}>\r\n        <Text>Simple Get Call</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={getDataUsingAsyncAwaitGetCall}>\r\n        <Text>Get Data Using Async Await GET</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={postDataUsingSimplePostCall}>\r\n        <Text>Post Data Using POST</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttonStyle}\r\n        onPress={multipleRequestsInSingleCall}>\r\n        <Text>Multiple Concurrent Requests In Single Call</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Text style={{textAlign: 'center', marginTop: 18}}>\r\n        www.aboutreact.com\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  buttonStyle: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n    width: '100%',\r\n    marginTop: 16,\r\n  },\r\n});\r\n\r\nexport default Apim;"]},"metadata":{},"sourceType":"module"}